{"ast":null,"code":"var _jsxFileName = \"D:\\\\web dev\\\\Ashu_blog\\\\frontend-new\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user data\n      const verifyToken = async () => {\n        try {\n          const response = await api.get('/api/auth/me');\n          setUser(response.data);\n        } catch (error) {\n          console.error('Failed to verify token:', error);\n          localStorage.removeItem('token');\n        } finally {\n          setLoading(false);\n        }\n      };\n      verifyToken();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    const response = await api.post('/api/auth/login', {\n      email,\n      password\n    });\n    const {\n      token,\n      user: userData\n    } = response.data;\n    localStorage.setItem('token', token);\n    setUser(userData);\n  };\n  const register = async userData => {\n    const response = await api.post('/api/auth/register', userData);\n    const {\n      token,\n      user: newUser\n    } = response.data;\n    localStorage.setItem('token', token);\n    setUser({\n      id: newUser.id,\n      name: newUser.name,\n      email: newUser.email,\n      createdAt: newUser.createdAt\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","verifyToken","response","get","data","error","console","removeItem","login","email","password","post","userData","setItem","register","newUser","id","name","createdAt","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/web dev/Ashu_blog/frontend-new/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode, useContext } from 'react';\nimport api from '../api';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  createdAt: string;\n  // Add other user properties as needed\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: {\n    name: string;\n    email: string;\n    password: string;\n    secretKey: string;\n  }) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user data\n      const verifyToken = async () => {\n        try {\n          const response = await api.get('/api/auth/me');\n          setUser(response.data);\n        } catch (error) {\n          console.error('Failed to verify token:', error);\n          localStorage.removeItem('token');\n        } finally {\n          setLoading(false);\n        }\n      };\n      verifyToken();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    const response = await api.post('/api/auth/login', { email, password });\n    const { token, user: userData } = response.data;\n    \n    localStorage.setItem('token', token);\n    setUser(userData);\n  };\n\n  const register = async (userData: {\n    name: string;\n    email: string;\n    password: string;\n    secretKey: string;\n  }) => {\n    const response = await api.post('/api/auth/register', userData);\n    const { token, user: newUser } = response.data;\n    \n    localStorage.setItem('token', token);\n    setUser({\n      id: newUser.id,\n      name: newUser.name,\n      email: newUser.email,\n      createdAt: newUser.createdAt\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\n\n// Define the API error response type\n\n// Create an Axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  },\n  withCredentials: true,\n  // Important for sending cookies with requests\n  xsrfHeaderName: 'X-CSRF-Token',\n  xsrfCookieName: 'XSRF-TOKEN'\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Ensure headers object exists\n    config.headers = config.headers || {};\n    // Add the Authorization header with Bearer token\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('Sending request to:', config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  console.log('Response received:', response.config.url, response.status);\n  return response;\n}, error => {\n  var _error$config, _errorData$error;\n  const errorResponse = error.response;\n  const errorData = (errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.data) || {};\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.status,\n    statusText: errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.statusText,\n    data: errorData\n  });\n\n  // Handle common errors (e.g., 401 Unauthorized)\n  if ((errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.status) === 401) {\n    // Only redirect to login if not already on login or register page\n    const currentPath = window.location.pathname;\n    if (!currentPath.includes('/login') && !currentPath.includes('/register')) {\n      localStorage.removeItem('token');\n      // Store the current location to redirect back after login\n      sessionStorage.setItem('redirectAfterLogin', currentPath);\n      window.location.href = '/login';\n    }\n  }\n\n  // Return a more detailed error message\n  const errorMessage = errorData.message || (typeof errorData.error === 'string' ? errorData.error : (_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || 'An error occurred';\n  return Promise.reject({\n    message: errorMessage,\n    status: errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.status,\n    data: errorData,\n    originalError: error\n  });\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","xsrfHeaderName","xsrfCookieName","interceptors","request","use","config","token","localStorage","getItem","console","log","url","error","Promise","reject","response","status","_error$config","_errorData$error","errorResponse","errorData","data","statusText","currentPath","window","location","pathname","includes","removeItem","sessionStorage","setItem","href","errorMessage","message","originalError"],"sources":["D:/web dev/Ashu_web_blogs/frontend-new/src/api.ts"],"sourcesContent":["import axios, { AxiosInstance, InternalAxiosRequestConfig, AxiosError } from 'axios';\n\n// Define the API error response type\ninterface ApiErrorResponse {\n  message?: string;\n  error?: string | { message?: string };\n  [key: string]: any;\n}\n\n// Create an Axios instance with default config\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n  withCredentials: true, // Important for sending cookies with requests\n  xsrfHeaderName: 'X-CSRF-Token',\n  xsrfCookieName: 'XSRF-TOKEN',\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Ensure headers object exists\n      config.headers = config.headers || {} as any;\n      // Add the Authorization header with Bearer token\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    console.log('Sending request to:', config.url);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => {\n    console.log('Response received:', response.config.url, response.status);\n    return response;\n  },\n  (error: AxiosError<ApiErrorResponse>) => {\n    const errorResponse = error.response;\n    const errorData = errorResponse?.data || {};\n    \n    console.error('API Error:', {\n      url: error.config?.url,\n      status: errorResponse?.status,\n      statusText: errorResponse?.statusText,\n      data: errorData\n    });\n\n    // Handle common errors (e.g., 401 Unauthorized)\n    if (errorResponse?.status === 401) {\n      // Only redirect to login if not already on login or register page\n      const currentPath = window.location.pathname;\n      if (!currentPath.includes('/login') && !currentPath.includes('/register')) {\n        localStorage.removeItem('token');\n        // Store the current location to redirect back after login\n        sessionStorage.setItem('redirectAfterLogin', currentPath);\n        window.location.href = '/login';\n      }\n    }\n    \n    // Return a more detailed error message\n    const errorMessage = \n      errorData.message || \n      (typeof errorData.error === 'string' ? errorData.error : errorData.error?.message) || \n      'An error occurred';\n    return Promise.reject({\n      message: errorMessage,\n      status: errorResponse?.status,\n      data: errorData,\n      originalError: error\n    });\n  }\n);\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
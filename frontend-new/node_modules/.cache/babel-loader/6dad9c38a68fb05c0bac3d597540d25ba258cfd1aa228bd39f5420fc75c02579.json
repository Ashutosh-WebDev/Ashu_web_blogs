{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import api from'../api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Check if user is already logged in on initial load\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Verify token and get user data\nconst verifyToken=async()=>{try{const response=await api.get('/api/auth/me');setUser(response.data);}catch(error){console.error('Failed to verify token:',error);localStorage.removeItem('token');}finally{setLoading(false);}};verifyToken();}else{setLoading(false);}},[]);const login=async(email,password)=>{try{const response=await api.post('/api/auth/login',{email,password});const{token,user:userData}=response.data;if(!token){throw new Error('No token received from server');}// Store the token in localStorage\nlocalStorage.setItem('token',token);// Set the user in state\nsetUser({id:userData.id,name:userData.name,email:userData.email,createdAt:userData.createdAt});return response.data;}catch(error){var _error$response,_error$response$data;console.error('Login error:',error);const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message||'Login failed';throw new Error(errorMessage);}};const register=async userData=>{const response=await api.post('/api/auth/register',userData);const{token,user:newUser}=response.data;localStorage.setItem('token',token);setUser({id:newUser.id,name:newUser.name,email:newUser.email,createdAt:newUser.createdAt});};const logout=()=>{localStorage.removeItem('token');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,login,register,logout},children:!loading&&children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","api","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","verifyToken","response","get","data","error","console","removeItem","login","email","password","post","userData","Error","setItem","id","name","createdAt","_error$response","_error$response$data","errorMessage","message","register","newUser","logout","Provider","value","useAuth","context"],"sources":["D:/web dev/Ashu_web_blogs/frontend-new/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode, useContext } from 'react';\nimport api from '../api';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  createdAt: string;\n  // Add other user properties as needed\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: {\n    name: string;\n    email: string;\n    password: string;\n    secretKey: string;\n  }) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user data\n      const verifyToken = async () => {\n        try {\n          const response = await api.get('/api/auth/me');\n          setUser(response.data);\n        } catch (error) {\n          console.error('Failed to verify token:', error);\n          localStorage.removeItem('token');\n        } finally {\n          setLoading(false);\n        }\n      };\n      verifyToken();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await api.post('/api/auth/login', { email, password });\n      const { token, user: userData } = response.data;\n      \n      if (!token) {\n        throw new Error('No token received from server');\n      }\n      \n      // Store the token in localStorage\n      localStorage.setItem('token', token);\n      \n      // Set the user in state\n      setUser({\n        id: userData.id,\n        name: userData.name,\n        email: userData.email,\n        createdAt: userData.createdAt\n      });\n      \n      return response.data;\n    } catch (error: any) {\n      console.error('Login error:', error);\n      const errorMessage = error.response?.data?.message || error.message || 'Login failed';\n      throw new Error(errorMessage);\n    }\n  };\n\n  const register = async (userData: {\n    name: string;\n    email: string;\n    password: string;\n    secretKey: string;\n  }) => {\n    const response = await api.post('/api/auth/register', userData);\n    const { token, user: newUser } = response.data;\n    \n    localStorage.setItem('token', token);\n    setUser({\n      id: newUser.id,\n      name: newUser.name,\n      email: newUser.email,\n      createdAt: newUser.createdAt\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}